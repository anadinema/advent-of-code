openapi: 3.0.3
info:
  title: Advent of Code - API
  description: |-
    API for getting output of puzzles from advent of code calendar.
    
    You can find the calendar here:
    - [Advent of Code - 2024](https://adventofcode.com/2024)
    - [Advent of Code - 2023](https://adventofcode.com/2023)
  version: 1.0.0
externalDocs:
  description: Find out more about Advent of code
  url: https://adventofcode.com
servers:
  - url: https://anadinema.dev/api/rest/project/advent
  - url: http://localhost:28080/api/rest/project/advent
  - url: http://localhost:8080/api/rest/project/advent
tags:
  - name: 'Year - 2023'
    description: 'All the puzzles for Year 2023'
paths:
  /v2023/puzzle/1:
    post:
      tags:
        - 'Year - 2023'
      summary: 'Get the output for puzzle 1'
      description: |-
        Something is wrong with global snow production, and you've been selected to take a look. The Elves have even given you a map; on it, they've used stars to mark the top fifty locations that are likely to be having problems.
        
        You've been doing this long enough to know that to restore snow operations, you need to check all fifty stars by December 25th.
        
        Collect stars by solving puzzles. Two puzzles will be made available on each day in the Advent calendar; the second puzzle is unlocked when you complete the first. Each puzzle grants one star. Good luck!
        
        You try to ask why they can't just use a weather machine ("not powerful enough") and where they're even sending you ("the sky") and why your map looks mostly blank ("you sure ask a lot of questions") and hang on did you just say the sky ("of course, where do you think snow comes from") when you realize that the Elves are already loading you into a trebuchet ("please hold still, we need to strap you in").
        
        **---------- Part 1 ----------**
        
        As they're making the final adjustments, they discover that their calibration document (your puzzle input) has been amended by a very young Elf who was apparently just excited to show off her art skills. Consequently, the Elves are having trouble reading the values on the document.
        
        The newly-improved calibration document consists of lines of text; each line originally contained a specific calibration value that the Elves now need to recover. On each line, the calibration value can be found by combining the first digit and the last digit (in that order) to form a single two-digit number.
        For example:
        
          ```
          1abc2
          pqr3stu8vwx
          a1b2c3d4e5f
          treb7uchet
          ```
        
        In this example, the calibration on values of these four lines are `12`, `38`, `15`, and `77`.
        
        Adding these together produces `142`.
        
        Consider your entire calibration document. **What is the sum of all of the calibration values?**
        
        **---------- Part 2 ----------**
        
        Your calculation isn't quite right. It looks like some of the digits are actually spelled out with letters: one, two, three, four, five, six, seven, eight, and nine also count as valid "digits".

        Equipped with this new information, you now need to find the real first and last digit on each line.
        For example:
          ```
          two1nine
          eightwothree
          abcone2threexyz
          xtwone3four
          4nineeightseven2
          zoneight234
          7pqrstsixteen
          ```
        In this example, the calibration values are `29`, `83`, `13`, `24`, `42`, `14`, and `76`. 
        
        Adding these together produces `281`.
        
        **What is the sum of all of the calibration values?**
        
        *Please provide the calibration document as given in the request example.*
      operationId: getPuzzleSolution
      parameters:
        - name: onlyPartOne
          description: 'Solution needed only by considering part 1 of the problem'
          in: query
          schema:
            type: boolean
            default: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PuzzleRequest'
            example:
              - two1nine
              - eightwothree
              - abcone2threexyz
              - xtwone3four
              - 4nineeightseven2
              - zoneight234
              - 7pqrstsixteen
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PuzzleResponse'
              example:
                day: 1
                data:
                  sum: 281
        '400':
          description: Invalid input
        '422':
          description: Validation exception
components:
  schemas:
    PuzzleRequest:
      type: array
      items:
        type: string
    PuzzleResponse:
      type: object
      properties:
        day:
          type: integer
          format: int64
          example: 10
        data:
          $ref: '#/components/schemas/PuzzleData'
    PuzzleData:
      type: object
      properties:
        sum:
          type: integer
          format: int64
          example: 100000
